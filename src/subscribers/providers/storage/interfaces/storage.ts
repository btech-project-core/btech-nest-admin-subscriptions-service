// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v3.21.12
// source: proto/storage.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "storage.v1";

export interface SubscriptionDetailIdRequest {
  subscriptionDetailId: string;
}

export interface StorageResponse {
  id: string;
  storageTypeId: string;
  subscriptionDetailId: string;
  createdAt: number;
  updatedAt: number;
}

export const STORAGE_V1_PACKAGE_NAME = "storage.v1";

export interface StorageServiceClient {
  findBySubscriptionDetailId(request: SubscriptionDetailIdRequest): Observable<StorageResponse>;
}

export interface StorageServiceController {
  findBySubscriptionDetailId(
    request: SubscriptionDetailIdRequest,
  ): Promise<StorageResponse> | Observable<StorageResponse> | StorageResponse;
}

export function StorageServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["findBySubscriptionDetailId"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("StorageService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("StorageService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const STORAGE_SERVICE_NAME = "StorageService";
